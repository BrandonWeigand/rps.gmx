<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_card_back</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_ui</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
opacity_min = 1;

globalvar card_current;
globalvar card_current_x;
globalvar card_current_y;
card_current = id;
card_current_x = x;
card_current_y = y;

card_id = floor(random_range(0,5));

image_index = card_id;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

card_name = element_type(card_id);
sprite_index = asset_get_index('spr_card_'+card_name);

var mx_angle = sign ((x - (room_width*0.5))) * -30;
if(sign(mx_angle - image_angle)!=0){
    image_angle += sign(mx_angle - image_angle);
    image_xscale=1;
    image_yscale=1;
}
if(mouse_over || id = global.card_current){
            
        if(point_distance(x,y,mouse_x,mouse_y) &lt;= point_distance(global.card_current_x,global.card_current_y,mouse_x,mouse_y)){
            
            
                if(mouse_over &amp;&amp; id = global.card_current){
                if(image_angle&lt;-5 || image_angle&gt;5){
                    image_angle -= sign(image_angle)*5;
                    image_xscale=1;
                    image_yscale=1;
                }else{
                image_angle=0;
                image_xscale=1.25;
                image_yscale=1.25;
                }
                }  

            if(mouse_check_button(mb_any) &amp;&amp; mouse_over){
                y = mouse_y;
                x = mouse_x;
            }else{
                x = xstart;
                y = ystart - 40;
            }
            depth = depth_max;
            
            global.card_current = id;
            global.card_current_x = x;
            global.card_current_y = y;
        }else{
            y = ystart;
            depth = depth_min;
        }
    
}else{
    y = ystart;
    depth = depth_min;
}


if(id = global.card_current){
    image_blend = c_white;
}else{
    image_blend = make_colour_rgb(200,200,200);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_monster">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

var win = element_decide(card_name,other.type);

switch(win){
    case true:{// win
        health -= 1;
        eft = instance_create(mouse_x,mouse_y,obj_effect);
        audio_play_sound(asset_get_index('snd_'+card_name), 10, false);
        eft.card_name = card_name;
        
        eft = instance_create(mouse_x,mouse_y,obj_effect);
        eft.card_name = 'good';
        eft.depth = eft.depth + 100;
    } break;
    case false:{// loose
        health += 1;
        audio_play_sound(snd_fail, 10, false);
        
        
        eft = instance_create(mouse_x,mouse_y,obj_effect);
        eft.depth = eft.depth + 100;
        eft.card_name = 'bad';
    } break;
    default:{// tie
        audio_play_sound(snd_tie, 10, false);
        
        eft = instance_create(mouse_x,mouse_y,obj_effect);
        eft.depth = eft.depth + 100;
        eft.card_name = 'bad';
    } break;
}

card_current = 0;
card_current_x = 0;
card_current_y = 0;
card_id = floor(random_range(0,5));
x = xstart;
y = ystart;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
